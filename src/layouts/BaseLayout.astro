---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Sidebar from '../components/Sidebar.jsx';
import Seo from '../components/Seo.astro';
import '../styles/tailwind.css';
import logo_fav from '../assets/favicon-16x16.png';

// Build canonical that respects site+base from astro.config
const BASE = import.meta.env.BASE_URL || '/';
const siteBase = new URL(BASE, Astro.site);
const pageUrl = new URL(Astro.url.pathname.replace(/^\//, ''), siteBase).toString();
const ogImage = new URL('og-default.jpg', siteBase).toString();

// Use distinct names so nothing clashes
const {
  title: layoutTitle = 'Ενάλια | Κέντρο Ψυχοθεραπείας στη Νέα Ιωνία',
  description: layoutDescription = 'Ψυχοθεραπεία στη Νέα Ιωνία: Ατομική, Ζεύγους, Οικογενειακή, Online.',
} = Astro.props;

---
const localBusinessSchema = {
  "@context": "https://schema.org",
  "@type": "LocalBusiness",
  "name": "Ενάλια",
  "image": new URL('og-default.jpg', siteBase).toString(),
  "url": siteBase.toString(),
  "telephone": "+306972078685",
  "address": {
    "@type": "PostalAddress",
    "streetAddress": "Λευκής 12",
    "addressLocality": "Νέα Ιωνία",
    "postalCode": "14231",
    "addressCountry": "GR"
  },
  "geo": { "@type": "GeoCoordinates", "latitude": 38.03656, "longitude": 23.74254 },
  "openingHoursSpecification": [{
    "@type": "OpeningHoursSpecification",
    "dayOfWeek": ["Monday","Tuesday","Wednesday","Thursday","Friday"],
    "opens": "09:00",
    "closes": "21:00"
  }]
};
---

<html lang="el">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href={import.meta.env.BASE_URL} />
    <Seo title={layoutTitle} description={layoutDescription} url={pageUrl} image={ogImage} />

    <link rel="icon" type="image/png" sizes="16x16" href={logo_fav.src} />
    <slot name="head" />
    
    <script type="application/ld+json">
      {JSON.stringify(localBusinessSchema)}
    </script>
  </head>

  <body class="min-h-screen bg-secondary">
    <script is:inline>
      (() => {
        const reduce = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
        const els = document.querySelectorAll('[data-reveal]');
        if (reduce) { els.forEach(el => el.setAttribute('data-reveal','in')); return; }
        const io = new IntersectionObserver((entries, obs) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              const el = entry.target;
              const delay = el.dataset.revealDelay || 0;
              el.style.transitionDelay = delay ? `${delay}ms` : '';
              requestAnimationFrame(() => el.setAttribute('data-reveal','in'));
              obs.unobserve(el);
            }
          });
        }, { threshold: 0.15, rootMargin: '0px 0px -5% 0px' });
        els.forEach(el => io.observe(el));
      })();
    </script>

    <div class="flex flex-col md:flex-row min-h-screen">
      <Sidebar client:load />
      <div class="flex flex-col flex-1 min-h-screen relative">
        <Header />
        <div class="top-[76px] md:left-72 w-full md:w-[calc(100%-0rem)] z-10">
          <slot name="banner" />
        </div>
        <main class="flex-1 bg-secondary px-4 md:px-8 pt-16 md:pt-16">
          <slot />
        </main>
        <footer>
          <Footer />
        </footer>
      </div>
    </div>
  </body>
</html>